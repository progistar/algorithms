package codeforces777;

public class ProblemD {

	/**
	 * B = G * N이고, N은 D로 나누어지지 않음.
	 * P = B * B 를 만족하는 조합 2개 이상.
	 * 
	 * 1) P를 만족하는 B가 없음 => N 또는 G 없음.
	 * 따라서, N과 G가 모두 있어야함.
	 * 
	 * 2) G가 1개 있다고 가정했을때
	 * 1)) N이 1개인 경우, B를 하나만 만들 수 있음.
	 * 2)) N이 2개 이상이면, B를 두 개 이상 만들 수 있음.
	 * 
	 * 문제 조건을 충족하기 위해서는 G는 최소 1개 이상, N은 2개 이상.
	 * 
	 * => D로 충분히 나눠보고. 나머지를 K라 할때,
	 * D의 수는 1개 이상 이어야 하고.
	 * K는 Prime number 2개 이상으로 구성되어 있으면 됨.
	 * 그러면 자연스레 N이 2개 이상이 되므로.
	 * 
	 * DP는 왜 쓰이지?
	 * 
	 * 
	 * 
	 */
}
